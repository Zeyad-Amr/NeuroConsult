// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(cuid())
  username String  @unique
  password String
  email    String? @unique
  type     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  patient   Patient? @relation(fields: [patientId], references: [id])
  patientId String?  @unique
}

model Patient {
  id            String        @id @default(cuid())
  name          String
  gender        String
  birthDate     DateTime      @db.Date
  phone         String        @unique
  address       String?
  comorbidities Comorbidity[]
  bloodType     String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user        User?
  vitals      Vitals[]
  medications Medication[]
  allergies   Allergy[]
  diagnosis   Diagnosis[]
  labs        Lab[]
  imaging     Imaging[]
}

model Vitals {
  id          String   @id @default(cuid())
  pulse       Int
  bp          String
  respiration Int
  pso2        Int
  patient     Patient? @relation(fields: [patientId], references: [id])
  patientId   String?
}

model Medication {
  id         String   @id @default(cuid())
  medication String
  dose       String
  route      String
  time       String
  notes      String?
  Patient    Patient? @relation(fields: [PatientId], references: [id])
  PatientId  String?
}

model Allergy {
  id        String   @id @default(cuid())
  name      String
  Patient   Patient? @relation(fields: [PatientId], references: [id])
  PatientId String?
}

model Diagnosis {
  id        String   @id @default(cuid())
  name      String
  Patient   Patient? @relation(fields: [PatientId], references: [id])
  PatientId String?
}

model Lab {
  id        String   @id @default(cuid())
  name      String
  result    String
  Patient   Patient? @relation(fields: [PatientId], references: [id])
  PatientId String?
}

model Imaging {
  id        String   @id @default(cuid())
  name      String
  result    String
  Patient   Patient? @relation(fields: [PatientId], references: [id])
  PatientId String?
}

enum Comorbidity {
  HYPERTENSION
  DIABETES
  CARDIOVASCULAR_Diagnosis
  OBESITY
  CHRONIC_RESPIRATORY_CONDITION
  IMMUNODEFICIENCY_DISORDER
  CHRONIC_KIDNEY_Diagnosis
  LIVER_Diagnosis
  CANCER
  AUTOIMMUNE_DISORDER
  NEUROLOGICAL_DISORDER
  GASTROINTESTINAL_DISORDER
  ENDOCRINE_DISORDER
  PSYCHIATRIC_DISORDER
  BONE_AND_JOINT_DISORDER
  INFECTIOUS_Diagnosis
  HEMATOLOGICAL_DISORDER
  METABOLIC_SYNDROME
  SLEEP_APNEA
  SUBSTANCE_USE_DISORDER
}
