// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String                @id @default(cuid())
  name                String
  username            String                @unique
  password            String
  email               String?               @unique
  gender              String
  birthDate           DateTime              @db.Date
  phone               String                @unique
  address             String?
  type                String
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  ConsultationRequest ConsultationRequest[]
}

model ConsultationRequest {
  id          String       @id @default(cuid())
  userId      String
  user        User         @relation(fields: [userId], references: [id])
  complaint   String
  diagnosis   String?
  vitalsId    String?      @unique
  vitals      Vitals?      @relation(fields: [vitalsId], references: [id])
  medications Medication[]
  allergies   Allergy[]
  diseases    Disease[]
  labs        Lab[]
  imaging     Imaging[]
  status      String       @default("pending")
  notes       String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Vitals {
  id                  String               @id @default(cuid())
  pulse               Int
  bp                  String
  respiration         Int
  pso2                Int
  ConsultationRequest ConsultationRequest?
}

model Medication {
  id                    String               @id @default(cuid())
  medication            String
  dose                  String
  route                 String
  time                  String
  notes                 String?
  ConsultationRequest   ConsultationRequest? @relation(fields: [consultationRequestId], references: [id])
  consultationRequestId String?
}

model Allergy {
  id                    String               @id @default(cuid())
  name                  String
  ConsultationRequest   ConsultationRequest? @relation(fields: [consultationRequestId], references: [id])
  consultationRequestId String?
}

model Disease {
  id                    String               @id @default(cuid())
  name                  String
  ConsultationRequest   ConsultationRequest? @relation(fields: [consultationRequestId], references: [id])
  consultationRequestId String?
}

model Lab {
  id                    String               @id @default(cuid())
  name                  String
  result                String
  ConsultationRequest   ConsultationRequest? @relation(fields: [consultationRequestId], references: [id])
  consultationRequestId String?
}

model Imaging {
  id                    String               @id @default(cuid())
  name                  String
  result                String
  ConsultationRequest   ConsultationRequest? @relation(fields: [consultationRequestId], references: [id])
  consultationRequestId String?
}
