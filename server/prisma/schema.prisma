// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(cuid())
  username String @unique
  password String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  patient   Patient? @relation(fields: [patientId], references: [id])
  patientId String?  @unique
}

model Patient {
  id            String   @id @default(cuid())
  name          String
  gender        String
  birthDate     DateTime @db.Date
  phone         String   @unique
  address       String?
  comorbidities String[]
  medications   String[]
  bloodType     String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user           User?
  vitals         Vitals[]
  allergies      Allergy[]
  diagnosis      Diagnosis[]
  labs           Lab[]
  imaging        Imaging[]
  ConsultatinReq ConsultatinReq[]
}

model Vitals {
  id          String   @id @default(cuid())
  pulse       Int?
  bp          String?
  respiration Int?
  pso2        Int?
  patient     Patient? @relation(fields: [patientId], references: [id])
  patientId   String?
}

model Medication {
  id         String  @id @default(cuid())
  medication String
  dose       String
  route      String
  time       String
  notes      String?
}

model Allergy {
  id        String   @id @default(cuid())
  name      String
  patient   Patient? @relation(fields: [patientId], references: [id])
  patientId String?
}

model Diagnosis {
  id        String   @id @default(cuid())
  name      String
  patient   Patient? @relation(fields: [patientId], references: [id])
  patientId String?
}

model Lab {
  id        String   @id @default(cuid())
  name      String
  result    String
  patient   Patient? @relation(fields: [patientId], references: [id])
  patientId String?
}

model Imaging {
  id        String   @id @default(cuid())
  name      String
  result    String
  patient   Patient? @relation(fields: [patientId], references: [id])
  patientId String?
}

model ConsultatinReq {
  id        String   @id @default(cuid())
  complaint String
  result    String?
  patient   Patient? @relation(fields: [patientId], references: [id])
  patientId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  radiologyImage String?
}
